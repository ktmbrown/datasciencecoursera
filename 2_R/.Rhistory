length(x)
x<-c(1,12,30,54,5)
x<-c(1,12,30,54,5)
length(x)
typeof(x)
x[2]
x<-c(x,8)
x
x=c(x,"cat")
typeof(x)
x[1:3]
x[x>5]
x<-c(1,12,30,54,5)
length(x)
typeof(x)
x[2]
x<-c(x,8)
x
x[x>5]
#sequence of numbers
series <-1:10
seq(10)
#sequence of numbers
series <-1:10
series
y=seq(1,10,by=2)
y
typeof(y)
typeof(as.integer(y))
typeof(y)
## MATRIX: 2D vector
m <- matrix(1:6. mrow = 2, ncol = 3)
## MATRIX: 2D vector
m <- matrix(1:6. nrow = 2, ncol = 3)
## MATRIX: 2D vector
m <- matrix(1:6, nrow = 2, ncol = 3)
m
m2<-matrix(1:6, nrow=3,ncol = 2)
n2
m2
m2<-matrix(1:6, nrow=3,ncol = 1)
m2
m2<-matrix(1:6, nrow=3)
m2
m2<-matrix(1:6, nrow=3, ncol = 2)
m2
# bind columns of two vectors to create a matrix
x <- 1:4
y<-10:13
cbind(x,y)
nrow(cbind(x,y))
nrow(cbind(x,y))
ncol(cbind(x,y))
rbind(x,y)
df1
df1=as.data.frame((cbind(x,y))) #convert to a data frame
df1
str(df1)
install.packages(datasets)
install.packages("datasets")
installed.packages()
length(df1)
data()
data(package="datasets")
data()
data("ChickWeight")
str(ChickWeight)
head(ChickWeight)
typeof(ChickWeight['Chick'])
typeof(ChickWeight.Diet)
typeof(ChickWeight[Diet])
knitr::opts_chunk$set(echo = TRUE)
# Setting working directory
setwd("C:\\Users\\kbrown5\\Documents\\Data_Science\\Statistics")
# Read in csv
married_sal<-read.csv("family-households-with-married-couples.csv",header=T)
View(married_sal)
# Read in csv
married_sal<-read.csv("family-households-with-married-couples.csv",header=T)
# View the head
head(married_sal)
# View the structure
str(married_sal)
# Read in csv
married_sal<-read.csv("family-households-with-married-couples.csv",header=T)
# View the head
head(married_sal)
# Read in text file
married_sal2<-read.table("family-households-with-married-couples.txt",header=T)
# View the head
head(married_sal2)
# View the structure
str(married_sal2)
red_wine<-read.csv("winequality-red.csv", header=T, sep=';')
install.packages(readxl)
installed.packages()
install.packages('readx;')
install.packages('readxl')
library(readxl)
setwd()
getwd()
setwd("C:/Users/kbrown5/Documents/Data_Science/datasciencecoursera/2_R")
getwd()
x <- 1
print(x)
x
msg <- "Hello"
X <- ## Incomplete expression
4
x <- 1:20
x
x <- c('a','b','c')
x
x <- c('d','e','f')
y <- c('a','b','c')
new_array <- array(x,y)
this_vec <- vector()
this_vec
m <- matrix(nrow=2,ncol=3)
attributes(m)
matrix(1:6, nrow=2, ncol=3)
m <- 1:10
dim(m) <- c(2,5)
m
dim(m) <- c(5,2)
m
x <- factor(c("yes","no","yes"))
x
levels(x) <- c("yes","no")
x
?is.na
df <- data.frame(foo = 1:4, bar = c("T","T","F","T"))
df
df <- data.frame(foo = 1:4, bar = c(T,T,F,T))
df
?sapply
x <- list(foo = 1:4, bar = 0.6)
y <- x[["bar"]]
y
typeof(y)
x[[1]]
typeof(x[[1]])
x <- list(foo = 1:4, bar = 0.6, baz = "hello")
x[c(1,3)]
typeof(x[c(1,3)])
x <- list(a=list(10,12,14), b=c(3.14,2.81))
x
x[a[[3]]]
x[a]
x['a'[[3]]]
x['a']
x['a'][[3]]
x[['a'][[3]]
x['a']
x <- 4
typeof(x)
z <- c("a",4)
z
typeof(1)
typeof(z)
x <- list(2, "a", "b", TRUE)
x[[2]]
typeof(x[[2]])
x <- 1:4
y <- 2
x + y
x <- c(3, 5, 1, 10, 12, 6)
x < 6
x[x<6]
x{{x<6}}
x[[x<6]]
x[x<6] <- 0
x
x <- c(3, 5, 1, 10, 12, 6)
x[x %in% 1:5] <0 0
x[x %in% 1:5] <- 0
x
getwed()
getwd()
data <- read.csv('hw1_data.csv')
View(data)
colnams(data)
df <- data.frame(data)
df
colnames(df)
head(2)
df.head(2)
head(df)
head(df,2)
nrow(df)
tail(df,3)
tail(df,2)
df['Ozone']
df['Ozone'][47]
df[['Ozone'][47]]
df['Ozone'][47]
df['Ozone'][[47]]
typeof(df['Ozone'])
typeof(df[['Ozone'])
typeof(df[['Ozone']])
x <- df['Ozone']
x
x[1]
x[1,1]
x[,47]
x[1,47]
x[47,]
df['Ozone'][47,]
sum(is.na(df))
sum(is.na(df['Ozone']))
mean(df['Ozone'])
mean(!is.na(df['Ozone']))
bad <- is.na(df['Ozone'])
bad
df[bad]
df[!bad]
mean(df[!bad])
summary(df)
nrow(df[!bad])
df[!bad]
type(df[!bad])
full_data <- df[!bad]
full_data
typeof(full_data)
mean(full_data)
list(full_data)
mean(list(full_data))
transform(full_data
()
)
transform(full_data)
mean(transform(full_data))
df
df['Ozone' > 31]
bad <- is.na(df)
bad
df_good <- complete.cases(df)
df_good
df[df_good]
good <- completed.cases(df)
good <- complete.cases(df)
df[good]
df[good,]
df_good <- df[good,]
df_good
oz_good <- df_good['Ozone' > 30]
oz_good
df_good
df_good > 30
df_good$Ozone > 30
df_good[df_good$Ozone > 30]
df_good[df_good$Ozone > 30,]
oz_g <- df_good[df_good$Ozone > 30,]
oz_g <- df_good[df_good$Ozone > 31,]
temp_g <- oz_g[oz_g$Temp > 90,]
temp_g
summary(temp_g)
df_good
df_good['Month' == 6]
df
df_6 <- df['Month' == 6]
df-6
df_6
df_6 <- df['Month' == '6']
df_6
df$Month
df$Month == 6
df_6 <- df[df$Month == 6]
df_6 <- df[df$Month == 6,]
df_6
df_good
df_6 <- df_good[df_good$Month == 6,]
df_6
summary(df_6)
df_6 <- df[df$Month == 6,]
df_6
summary(df_6)
df_5 <- df[df$Month == 5,]
summary(df_5)
head(df)
df[47,'Ozone']
df[,'Month']
df[,df['Month' == 6]]
df[,'Month' == 6]
df$Month
df[,2]
df[[,2]]
df[,c(2,4)]
data.frame(df[,4])
df[,c('Temp','Month')]
df[,df$Month == 6]
df[df$Month==6]
df[df$Month==6,]
mean(df[df$Month == 6,]$Temp)
mean(df[df$Month == 5,]$Solar.R)
mean(df[df$Month == 5,]$Temp)
anyNa(df)
anyNA(df$Solar.R)
is.na(df$Solar.R)
complete.cases(df$Solar.R)
complete.cases(df)
df[completed.cases(df),]
df[complete.cases(df),]
df_clean <- df[complete.cases(df),]
mean(df_clean[df_clean$Month == 5,df_clean$Solar.R])
mean(df_clean$Temp)
mean(df_clean$Month == 5)
df_clean[df_clean$Month == 5,]
mean(df_clean[df_clean$Month == 5,]$Solar.R)
x <- matrix(1:6, 2, 3)
x
for(i in seq_len(nrow(x))) {}
for(i in seq_len(nrow(x))) {
for(j in seq_len(ncol(y))) {
print(x[i,j])
}
}
for(i in seq_len(nrow(x))) {
for(j in seq_len(ncol(x))) {
print(x[i,j])
}
}
add2 <- function(x, y) {
x + y
}
add2(3,5)
above10 <- function(x) {
use <- x > 10
x[use]
}
above10(c(1,2,32,31,90,12,32,4,62,5,0))
above <- function(x, n) {
use <- x > n
x
}
above(c(1,2,32,31,90,12,32,4,62,5,0),12)
above <- function(x, n) {
use <- x > n
x[use]
}
above(c(1,2,32,31,90,12,32,4,62,5,0),12)
above <- function(x, n=10) {
use <- x > n
x[use]
}
above(c(1,2,32,31,90,12,32,4,62,5,0))
columnmeans <- function(df) {
nc <- ncol(df)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(df[,i])
}
means
}
df <- read.csv('hw1_data.csv')
columnmeans(df)
columnmeans <- function(df,remove_na = TRUE) {
nc <- ncol(df)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(df[,i],na.rm = remove_na)
}
means
}
columnmeans(df)
columnmeans(df, remove_na=FALSE)
install.packages('swirl')
packageVersion("swirl")
library(swirl)
rm(list=ls())
swirl()
install_from_swirl("R Programming")
swirl()
c(44,NA,4,NA)
x <- c(44,NA,4,NA)
x <- c(44,NA,5,NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y,z),100)
is.na(my_data)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo=11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11,2,NA)
name(vect2) <- c("foo", "bar", "norf")
names(vect2) <- c("foo", "bar", "norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector <- c(1:20)
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix()
?matrix
my_matrix2 <- matrix(1:20,4,5)
identical(my_matrix,my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients,my_matrix
)
my_data <- data.frame(patients,my_matrix)
my_data
class(my_da)
class(my_data)
cnames <- c("patient","age","weight","bp","rating","test")
colnames() <- cnames
colnames(my_data) <- cnames
my_data
myplot <- function(x, y, type = "1", ...) {
plot(x,y,type = type, ...)
}
myplot(x,...)
myplot(x,y)
x
x = [1,2,3]
x <- c(1,2,3)
y <- c(4,5,6)
myplot(x,y)
?plot
myplot <- function(x, y, type = "l", ...) {
plot(x,y,type = type, ...)
}
myplot(x,y)
f <- function(x,y) { x^2 + y / z}
z = 3
f(x,y)
4 + 5 / 3
make.power <- function(n) {
pow <- function(x) {
x^n
}
pow
}
cube <- make.power(3)
square <- make.power(2)
cube(2)
square(2)
cube
f <- function(x) {
y <- 2
y^2 + g(x)
}
g <- function(x) {
x*y
}
f(3)
f <- function(x) {
y <- 2
y^2 + g(x)
}
g <- function(x) {
x*y
}
f(3)
y <- 10
f(3)
y <- 10
f <- function(x) {
y <- 2
y^2 + g(x)
}
g <- function(x) {
x*y
}
f(3)
g <- function(x) {
a <- 3
x + a + y
}
g(2)
g <- function(x) {
a <- 3
x + a + y
}
g(2)
y <- 3
g(2)
cube <- function(x, n) {
x^3
}
cube(3)
View(cube)
?cube
??cube
